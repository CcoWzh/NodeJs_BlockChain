{"version":3,"sources":["BlockChain.test.js"],"names":["Block","require","t","block","is","body","blockTest","BlockChain","Blockchain","addBlock","hash"],"mappings":";;AAAA;;AACA;;;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,kBAAK,YAAL,EAAkBC,CAAC,IAAG;AAClB,MAAIC,KAAK,GAAG,IAAIH,KAAK,CAACA,KAAV,CAAgB,iBAAhB,CAAZ;AACAE,EAAAA,CAAC,CAACE,EAAF,CAAKD,KAAK,CAACE,IAAX,EAAgB,iBAAhB;AACH,CAHD;AAKA,kBAAK,0BAAL,EAAiCH,CAAC,IAAI;AAClC,MAAII,SAAS,GAAG,IAAIN,KAAK,CAACA,KAAV,CAAgB,kBAAkB,CAAlC,CAAhB;;AACAO,sBAAWC,UAAX,GAAwBC,QAAxB,CAAiCH,SAAjC;;AACAJ,EAAAA,CAAC,CAACE,EAAF,CAAKE,SAAS,CAACI,IAAf,EAAoB,CAApB;AACH,CAJD","sourceRoot":"C:\\Users\\Administrator\\Desktop\\我的程序\\nodejs\\NodeJs_BlockChain","sourcesContent":["import test from \"ava\"\r\nimport BlockChain from \"./BlockChain\"\r\nconst Block = require('./Block.js');\r\n\r\ntest(\"test block\",t =>{\r\n    let block = new Block.Block(\"this is a block\")\r\n    t.is(block.body,\"this is a block\")\r\n})\r\n\r\ntest('add block :: valid chain', t => {\r\n    let blockTest = new Block.Block(\"Test Block - \" + 1)\r\n    BlockChain.Blockchain().addBlock(blockTest)\r\n    t.is(blockTest.hash,2)\r\n})"]}